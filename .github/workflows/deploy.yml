name: Deploy to DigitalOcean

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref (branch/tag) to deploy"
        required: false
        default: "main"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || 'main' }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build (standalone)
        run: pnpm build

      - name: Package artifact
        run: |
          tar -czf release.tgz \
            .next/standalone \
            .next/static \
            public \
            next.config.js \
            package.json \
            .env.example

      - name: Upload to server (key)
        if: ${{ secrets.SSH_KEY != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "release.tgz"
          target: "~/apps/openshutter"

      - name: Upload to server (password)
        if: ${{ secrets.SSH_KEY == '' && secrets.SSH_PASSWORD != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "release.tgz"
          target: "~/apps/openshutter"

      - name: Deploy on server (key)
        if: ${{ secrets.SSH_KEY != '' }}
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          envs: DEPLOY_DIR
          script: |
            set -e
            SRC_DIR="$HOME/apps/openshutter"
            APP_DIR="${DEPLOY_DIR:-$SRC_DIR}"
            mkdir -p "$SRC_DIR"
            cd "$SRC_DIR"
            tar -xzf release.tgz
            rm -f release.tgz

            # If DEPLOY_DIR is different, sync files to target
            if [ "$APP_DIR" != "$SRC_DIR" ]; then
              sudo mkdir -p "$APP_DIR"
              sudo rsync -a --delete "$SRC_DIR"/ "$APP_DIR"/
            fi

            # Create runtime env file if not exists
            if [ ! -f "$APP_DIR/.env" ]; then
              echo "Create .env on server based on required keys" >&2
              sudo touch "$APP_DIR/.env"
              sudo chown "$USER":"$USER" "$APP_DIR/.env"
            fi

            # Create systemd service if missing
            SERVICE_FILE=/etc/systemd/system/openshutter.service
            if [ ! -f $SERVICE_FILE ]; then
              sudo bash -c "cat > $SERVICE_FILE" << 'EOF'
[Unit]
Description=OpenShutter
After=network.target

[Service]
Type=simple
WorkingDirectory=$APP_DIR
EnvironmentFile=$APP_DIR/.env
ExecStart=/usr/bin/node $APP_DIR/.next/standalone/server.js -p 4000
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
              sudo systemctl daemon-reload
              sudo systemctl enable openshutter
            fi

            # Restart service
            sudo systemctl restart openshutter

      - name: Deploy on server (password)
        if: ${{ secrets.SSH_KEY == '' && secrets.SSH_PASSWORD != '' }}
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT || 22 }}
          envs: DEPLOY_DIR
          script: |
            set -e
            SRC_DIR="$HOME/apps/openshutter"
            APP_DIR="${DEPLOY_DIR:-$SRC_DIR}"
            mkdir -p "$SRC_DIR"
            cd "$SRC_DIR"
            tar -xzf release.tgz
            rm -f release.tgz

            # Create runtime env file if not exists
            if [ ! -f "$APP_DIR/.env" ]; then
              echo "Create .env on server based on required keys" >&2
              sudo touch "$APP_DIR/.env"
              sudo chown "$USER":"$USER" "$APP_DIR/.env"
            fi

            # Create systemd service if missing
            SERVICE_FILE=/etc/systemd/system/openshutter.service
            if [ ! -f $SERVICE_FILE ]; then
              sudo bash -c "cat > $SERVICE_FILE" << 'EOF'
[Unit]
Description=OpenShutter
After=network.target

[Service]
Type=simple
WorkingDirectory=$APP_DIR
EnvironmentFile=$APP_DIR/.env
ExecStart=/usr/bin/node $APP_DIR/.next/standalone/server.js -p 4000
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
              sudo systemctl daemon-reload
              sudo systemctl enable openshutter
            fi

            # Restart service
            sudo systemctl restart openshutter
